# -*- coding: utf-8 -*-
"""Pycaretmpratice diabetesdataset.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1B7elixv_b2lo5R62RQ8FiQrwW6br21n_
"""

# importing nessessary libraries
import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

df = pd.read_csv('/content/diabetes.csv')
df.head()

df.columns

# check missing data
df.isnull().sum()

#EDA
df.info()

df.describe()

df.duplicated().sum()

# Glucose	BloodPressure	SkinThickness	Insulin	BMI
print("Mean :", df['Glucose'].mean())
print("median:",df['Glucose'].median())

df['Glucose']=np.where(df['Glucose']==0, df['Glucose'].mean(), df['Glucose'])
df['BloodPressure']=np.where(df['BloodPressure']==0, df['BloodPressure'].mean(), df['BloodPressure'])
df['SkinThickness']=np.where(df['SkinThickness']==0, df['SkinThickness'].mean(), df['SkinThickness'])
df['Insulin']=np.where(df['Insulin']==0, df['Insulin'].mean(), df['Insulin'])
df['BMI']=np.where(df['BMI']==0, df['BMI'].mean(), df['BMI'])

df.describe()

#!pip install dtale

import dtale
dtale.show(df)

"""# Pycaret method

"""

#creating the training data and testing data for model building and prediction
data_train = df.sample(frac=0.8, random_state=0).reset_index(drop=True)
data_test = df.drop(data_train.index).reset_index(drop=True)

data_train.shape

data_test.shape

#!pip install pycaret

from pycaret.classification import *

exp_classification = setup(data = data_train, target = 'Outcome', session_id=123)

compare_models()

# create a model
logit = create_model('lr')

# fine tuning
tuned_logit = tune_model(logit)

# Evaluate the model
evaluate_model(tuned_logit)

# Predict the model
predict_model(tuned_logit)

# Predict on test data
unseen_predication = predict_model(tuned_logit, data=data_test)
unseen_predication.head()

# Save model for deployment
save_model(tuned_logit,'Logistic_regression_Model')





